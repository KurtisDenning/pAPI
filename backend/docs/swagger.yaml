basePath: /api/v1
definitions:
  entity_models.APIData:
    properties:
      _id:
        type: string
      base:
        type: string
      categories:
        items:
          type: string
        type: array
      dailyCount:
        type: integer
      description:
        type: string
      externalURL:
        type: string
      monthlyCount:
        type: integer
      requests:
        items:
          $ref: '#/definitions/entity_models.Request'
        type: array
      title:
        type: string
      totalCount:
        type: integer
      weeklyCount:
        type: integer
      yearlyCount:
        type: integer
    type: object
  entity_models.APIDataOverview:
    properties:
      _id:
        type: string
      categories:
        items:
          type: string
        type: array
      description:
        type: string
      title:
        type: string
    type: object
  entity_models.Category:
    properties:
      _id:
        type: string
      longDesc:
        type: string
      name:
        type: string
      shortDesc:
        type: string
    type: object
  entity_models.Message:
    properties:
      message:
        type: string
    type: object
  entity_models.Request:
    properties:
      lastUpdate:
        type: integer
      request:
        type: string
      response:
        additionalProperties: true
        type: object
    type: object
host: papi-project.herokuapp.com
info:
  contact: {}
  description: A public API that brings together the data from many other API's and
    makes them publicly accessible.
  title: pAPI
  version: "1.0"
paths:
  /apidata:
    get:
      description: Get a list of all API's that are currently stored in the database,
        and an overview of their information
      produces:
      - application/json
      responses:
        "200":
          description: Successful request.
          schema:
            items:
              $ref: '#/definitions/entity_models.APIDataOverview'
            type: array
        "429":
          description: Too many requests - please only test once every 10 seconds
          schema:
            type: string
      summary: Get all API data
      tags:
      - APIData
  /apidata/{objectID}/{requestID}:
    get:
      description: Get complete information about a single API request stored in the
        database. Also requset an update to the information if is has been longer
        than 4 hours since the last update.
      parameters:
      - description: The Object ID (_id) of the API data entry
        in: path
        name: objectID
        required: true
        type: string
      - description: The index of the request to get from the requests array in the
          API data entry
        in: path
        name: requestID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successful request.
          schema:
            $ref: '#/definitions/entity_models.Request'
        "400":
          description: Problem with user request - read message for more details
          schema:
            $ref: '#/definitions/entity_models.Message'
        "429":
          description: Too many requests - please only test once every 10 seconds
          schema:
            type: string
        "500":
          description: Problem with server processing - read message for more details
          schema:
            $ref: '#/definitions/entity_models.Message'
        "502":
          description: Problem connecting to external API - read message for more
            details
          schema:
            $ref: '#/definitions/entity_models.Message'
      summary: Get single API data request
      tags:
      - APIDataRequest
  /apidata/{oid}:
    get:
      description: Get complete information about a single API stored in the database
      parameters:
      - description: The Object ID (_id) of the API data entry
        in: path
        name: oid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful request.
          schema:
            $ref: '#/definitions/entity_models.APIData'
        "400":
          description: Problem with user request - read message for more details
          schema:
            $ref: '#/definitions/entity_models.Message'
        "429":
          description: Too many requests - please only test once every 10 seconds
          schema:
            type: string
        "500":
          description: Problem with server processing - read message for more details
          schema:
            $ref: '#/definitions/entity_models.Message'
        "502":
          description: Problem connecting to external API - read message for more
            details
          schema:
            $ref: '#/definitions/entity_models.Message'
      summary: Get single API data
      tags:
      - APIData
  /categories:
    get:
      description: Get a list of all categories that are currently stored in the database
      produces:
      - application/json
      responses:
        "200":
          description: Successful request
          schema:
            items:
              $ref: '#/definitions/entity_models.Category'
            type: array
        "429":
          description: Too many requests - please only test once every 10 seconds
          schema:
            type: string
      summary: Get all categories
      tags:
      - Category
  /categories/{oid}:
    get:
      description: Get a single category from the database
      parameters:
      - description: The Object ID (_id) of the category
        in: path
        name: oid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful request
          schema:
            $ref: '#/definitions/entity_models.Category'
        "400":
          description: Invalid object ID
          schema:
            $ref: '#/definitions/entity_models.Message'
        "429":
          description: Too many requests - please only test once every 10 seconds
          schema:
            type: string
      summary: Get a category
      tags:
      - Category
swagger: "2.0"
